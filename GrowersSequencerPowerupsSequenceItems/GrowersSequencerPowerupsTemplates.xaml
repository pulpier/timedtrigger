<ResourceDictionary
    x:Class="GrowersAstro.NINA.GrowersSequencerPowerups.GrowersSequencerPowerupsTestCategory.PluginItemTemplate"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:GrowersAstro.NINA.GrowersSequencerPowerups"
    xmlns:mini="clr-namespace:NINA.View.Sequencer.MiniSequencer;assembly=NINA.Sequencer"
    xmlns:nina="clr-namespace:NINA.View.Sequencer;assembly=NINA.Sequencer"
    xmlns:rules="clr-namespace:NINA.Core.Utility.ValidationRules;assembly=NINA.Core"
    xmlns:ns="clr-namespace:NINA.Core.Locale;assembly=NINA.Core"
    xmlns:customcontrollibrary="clr-namespace:NINA.CustomControlLibrary;assembly=NINA.CustomControlLibrary">
 
   
    <!-- ============= -->
    <!-- Timed Trigger -->
    <!-- ============= -->


    <DataTemplate DataType="{x:Type local:GrowersSequencerPowerupsTimedTrigger}">
        <nina:SequenceBlockView>
            <nina:SequenceBlockView.SequenceItemContent>
                <StackPanel Orientation="Horizontal">
                    <ComboBox
                        Margin="5,0,0,0"
                        VerticalAlignment="Center"
                        VerticalContentAlignment="Center"
                        DisplayMemberPath="Name"
                        ItemsSource="{Binding DateTimeProviders}"
                        SelectedItem="{Binding SelectedProvider}" />
                    <TextBlock
                        Margin="5,0,0,0"
                        VerticalAlignment="Center"
                        Text="{ns:Loc LblTime}" />
                    <TextBox
                        MinWidth="40"
                        Margin="5,0,0,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        HorizontalContentAlignment="Right"
                        IsEnabled="{Binding HasFixedTimeProvider, Converter={StaticResource InverseBooleanConverter}}">
                        <TextBox.Text>
                            <Binding Path="Hours">
                                <Binding.ValidationRules>
                                    <rules:IntRangeRule>
                                        <rules:IntRangeRule.ValidRange>
                                            <rules:IntRangeChecker Maximum="23" Minimum="0" />
                                        </rules:IntRangeRule.ValidRange>
                                    </rules:IntRangeRule>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock VerticalAlignment="Center" Text=":" />
                    <TextBox
                        MinWidth="40"
                        Margin="5,0,0,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        HorizontalContentAlignment="Right"
                        IsEnabled="{Binding HasFixedTimeProvider, Converter={StaticResource InverseBooleanConverter}}">
                        <TextBox.Text>
                            <Binding Path="Minutes">
                                <Binding.ValidationRules>
                                    <rules:IntRangeRule>
                                        <rules:IntRangeRule.ValidRange>
                                            <rules:IntRangeChecker Maximum="59" Minimum="0" />
                                        </rules:IntRangeRule.ValidRange>
                                    </rules:IntRangeRule>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock VerticalAlignment="Center" Text=":" />
                    <TextBox
                        MinWidth="40"
                        Margin="5,0,0,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        HorizontalContentAlignment="Right"
                        IsEnabled="{Binding HasFixedTimeProvider, Converter={StaticResource InverseBooleanConverter}}">
                        <TextBox.Text>
                            <Binding Path="Seconds">
                                <Binding.ValidationRules>
                                    <rules:IntRangeRule>
                                        <rules:IntRangeRule.ValidRange>
                                            <rules:IntRangeChecker Maximum="59" Minimum="0" />
                                        </rules:IntRangeRule.ValidRange>
                                    </rules:IntRangeRule>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding HasFixedTimeProvider, Converter={StaticResource VisibilityConverter}}">
                        <TextBlock
                            Margin="5,0,0,0"
                            VerticalAlignment="Center"
                            Text="{ns:Loc LblTimeOffset}"
                            ToolTip="{ns:Loc LblTimeOffsetTooltip}" />
                        <TextBox
                            MinWidth="40"
                            Margin="5,0,0,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            HorizontalContentAlignment="Right"
                            Text="{Binding MinutesOffset}"
                            Visibility="{Binding HasFixedTimeProvider, Converter={StaticResource VisibilityConverter}}" />
                        <TextBlock VerticalAlignment="Center">m</TextBlock>
                    </StackPanel>
                </StackPanel>
            </nina:SequenceBlockView.SequenceItemContent>
            <nina:SequenceBlockView.SequenceItemProgressContent>
                <StackPanel Orientation="Horizontal">
                    <TextBlock
                        Margin="5,0,0,0"
                        VerticalAlignment="Center"
                        Text="{ns:Loc LblRemaining}" />
                    <TextBlock
                        Margin="5,0,0,0"
                        VerticalAlignment="Center"
                        Text="{Binding RemainingTime, StringFormat={}{0:hh}:{0:mm}:{0:ss}}" />
                </StackPanel>
            </nina:SequenceBlockView.SequenceItemProgressContent>
        </nina:SequenceBlockView>
    </DataTemplate>


    <!--  The definition of the plugin test condition style  -->
    <!--  The DataType has to be defined as the instruction in context  -->


    <!--  The definition of the test condition plugin style in the mini format on the imaging tab  -->
    <!--  The Key has to be defined as the fully qualified instruction name and the "_Mini" postfix  -->
    <DataTemplate x:Key="GrowersAstro.NINA.GrowersSequencerPowerups.GrowersSequencerPowerupsTestCategory.GrowersSequencerPowerupsTimedTrigger_Mini">
        <mini:MiniSequenceItem>
            <mini:MiniSequenceItem.SequenceItemContent>
                <StackPanel Orientation="Horizontal">
                    <CheckBox
                        MinWidth="40"
                        VerticalAlignment="Center"
                        IsChecked="{Binding IsTruthy}" />
                </StackPanel>
            </mini:MiniSequenceItem.SequenceItemContent>
        </mini:MiniSequenceItem>
    </DataTemplate>
    
    <!-- ================ -->
    <!-- Interval Trigger -->
    <!-- ================ -->

    <DataTemplate DataType="{x:Type local:GrowersSequencerPowerupsIntervalTrigger}">
        <nina:SequenceBlockView>
            <nina:SequenceBlockView.SequenceItemContent>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblDelay}" />
                        <customcontrollibrary:UnitTextBox
                        MinWidth="40"
                        Margin="5,0,0,0"
                        VerticalAlignment="Center"
                        VerticalContentAlignment="Center"
                        TextAlignment="Right"
                        Unit="s">
                        <customcontrollibrary:UnitTextBox.Text>
                                <Binding Mode="TwoWay" Path="Time">
                                    <Binding.ValidationRules>
                                        <rules:GreaterThanZeroRule />
                                    </Binding.ValidationRules>
                                </Binding>
                            </customcontrollibrary:UnitTextBox.Text>
                        </customcontrollibrary:UnitTextBox>
                    </StackPanel>
                </nina:SequenceBlockView.SequenceItemContent>
        </nina:SequenceBlockView>
    </DataTemplate>


    <!--  The definition of the plugin test condition style  -->
    <!--  The DataType has to be defined as the instruction in context  -->


    <!--  The definition of the test condition plugin style in the mini format on the imaging tab  -->
    <!--  The Key has to be defined as the fully qualified instruction name and the "_Mini" postfix  -->
    <DataTemplate x:Key="GrowersAstro.NINA.GrowersSequencerPowerups.GrowersSequencerPowerupsTestCategory.GrowersSequencerPowerupsIntervalTrigger_Mini">
        <mini:MiniSequenceItem>
            <mini:MiniSequenceItem.SequenceItemContent>
                <StackPanel Orientation="Horizontal">
                    <CheckBox
                       MinWidth="40"
                       VerticalAlignment="Center"
                       IsChecked="{Binding IsTruthy}" />
                </StackPanel>
            </mini:MiniSequenceItem.SequenceItemContent>
        </mini:MiniSequenceItem>
    </DataTemplate>


</ResourceDictionary>